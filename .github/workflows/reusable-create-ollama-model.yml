# This workflow:
# - Loads the collection->repo_id mapping from the specified JSON config file.
# - Using the JSON collection mapping dict. to:
#   - Creates the defined HF collections in the target org. (i.e., 'repo_owner' or namespace) in HF Hub.
#   - Adds the defined model repos. (i.e., 'repo_id's ) to their corresponding HF collections.

name: create-ollama-model-reusable

on:
  workflow_call:
    secrets:
      hf_token:
        required: true
    inputs:
      debug:
        type: boolean
        required: true
        default: false
      granite_family:
        type: string
        required: true
      enable_language_jobs:
        type: boolean
        required: false
        default: false
      enable_vision_jobs:
        type: boolean
        required: false
        default: false
      enable_guardian_jobs:
        type: boolean
        required: false
        default: false
      enable_embedding_jobs:
        type: boolean
        required: false
        default: false
      target_repo_owner:
        type: string
        required: true
      target_repo_name_ext:
        type: string
        required: true
      repo_id:
        type: string
        required: true
      quantization:
        type: string
        required: true

jobs:
  ollama-startup:
    runs-on: macos-latest
    env:
      OLLAMA_DEBUG: 1
      OLLAMA_PORT: 11434
      OLLAMA_HOST: http://127.0.0.1:11434
    steps:
      - uses: actions/checkout@v4
      - name: Printenv
        run: |
          pwd
          printenv | sort
          lsof -i
      - name: ollama-setup
        run: |
          echo -e "OLLAMA_DEBUG: $OLLAMA_DEBUG\n"
          echo -e "OLLAMA_PORT: $OLLAMA_PORT\n"
          echo -e "OLLAMA_HOST: $OLLAMA_HOST\n"
          echo -e "starting ollama on port: $OLLAMA_HOST...\n"
          ./bin/ollama serve &
          echo -e "Sleeping...\n"
          sleep 10
          echo -e "Getting PID...\n"
          lsof -i  | grep ollama
      - name: ollama-client
        run: |
          echo -e "Ollama help...\n"
          ./bin/ollama
          echo -e "Sleeping...\n"
          sleep 2
          echo -e "Ollama list...\n"
          ./bin/ollama list
      - name: end-test
        run:
          echo -e "OLLAMA_PORT:" "${{env.OLLAMA_PORT}}\n"
          echo -e "Killing server...\n"
          kill -9 $(lsof -i:${{env.OLLAMA_PORT}} -t)
          echo -e "Sleeping...\n"
          sleep 10
          lsof -i
          exit 0
