name: g3.1-release-tag
#run-name: Create repos for GGUF

on:
  push:   
    branches: 
      - 'release/granite-3.1'
    tags:
      - "v3.1*"
  workflow_dispatch:

permissions:
 contents: read
 packages: read

env:
  DEBUG: true
  TARGET_REPO_NAME_EXT: -GGUF
  TARGET_REPO_OWNER: mrutkows  
  COLLECTION_CONFIG: "resources/json/granite-3.1/hf_collection_mapping_test.json"

jobs:
  environment-setup:
    runs-on: ubuntu-latest
    outputs:
      hf_collection_config: ${{ steps.set-vars.outputs.hf_collection_config }}
      target_repo_owner: ${{ steps.set-vars.outputs.target_repo_owner }}   
    steps:
      - name: Set environment variables in GitHub output
        id: set-vars
        run: |
            echo "hf_collection_config: $COLLECTION_CONFIG"
            echo "target_repo_owner: $TARGET_REPO_OWNER"
            echo "target_repo_name_ext: $TARGET_REPO_NAME_EXT"                        
            echo "hf_collection_config=$COLLECTION_CONFIG" >> "$GITHUB_OUTPUT"
            echo "target_repo_owner=$TARGET_REPO_OWNER" >> "$GITHUB_OUTPUT"   
            echo "target_repo_name_ext=$TARGET_REPO_NAME_EXT" >> "$GITHUB_OUTPUT"          
      # - name: Print step output values
      #   run: |       
      #       echo "hf_collection_config: '${{ steps.set-vars.outputs.hf_collection_config }}'"    
      #       echo "target_repo_owner: '${{ steps.set-vars.outputs.target_repo_owner }}'" 
      #       echo "target_repo_name_ext: '${{ steps.set-vars.outputs.target_repo_name_ext }}'"                            
  call-create-repos:  
    needs: [ environment-setup ]
    uses: IBM/gguf/.github/workflows/reusable-create-repo.yml@main
    with:
      debug: ${{ needs.environment-setup.outputs.debug == 'true' }}
      hf_collection_config: ${{ needs.environment-setup.outputs.hf_collection_config }}
      target_repo_owner: ${{ needs.environment-setup.outputs.target_repo_owner }}    
      target_repo_name_ext: ${{ needs.environment-setup.outputs.target_repo_name_ext }}
    secrets: inherit

  # call-convert-hf-to-f16-gguf:  
  #   needs: [ call-create-repos ]
  #   uses: IBM/gguf/.github/workflows/reusable-convert-hf-to-f16-gguf.yml@main
  #   with:
  #     debug: ${{ needs.environment-setup.outputs.debug == 'true' }}
  #     hf_collection_config: ${{ needs.environment-setup.outputs.hf_collection_config }}
  #     target_repo_owner: ${{ needs.environment-setup.outputs.target_repo_owner }}    
  #     target_repo_name_ext: ${{ needs.environment-setup.outputs.target_repo_name_ext }}
  #   secrets: inherit

  on-push-release-tag:
    needs: [ call-create-repos ]    
    runs-on: ubuntu-latest # macos-latest     
    outputs:
      target_owner: ${{ env.TARGET_REPO_OWNER }}
      target_collection_config: "${{ env.COLLECTION_CONFIG }}"

    steps:
    - uses: actions/checkout@v4
    - run: |
        echo "[INFO] github.env:"   
        echo "[INFO] >> run_id: '${{ github.run_id }}'"       
        echo "[INFO] >> ref: '${{ github.ref }}', ref_name: '${{ github.ref_name }}', ref_type: '${{ github.ref_type }}'"
        echo "[INFO] >> workflow_ref: '${{ github.workflow_ref }}'"         
        echo "[INFO] >> event_type: '${{ github.event_type }}'" 
        echo "[INFO] >> event.: action: '${{ github.event.action }}'"
        echo "[INFO] >> event.: base_ref: '${{ github.event.base_ref }}'"        
        echo "[INFO] >> event.: workflow_run.conclusion: '${{ github.event.workflow_run.conclusion }}'"
        echo "[INFO] >> event.release.: name: '${{ github.event.release.name }}', tag_name: '${{ github.event.release.tag_name }}'"

    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"

    - name: Dump GitHub context
      env:
        GH_CONTEXT: ${{ toJson(github) }}
      run: echo "$GH_CONTEXT"  

    - name: confirm-environment
      run: |
        uname -a
        echo "runner.os: ${{ runner.os }}"
        echo "runner.arch: ${{ runner.arch }}"
        echo "github.workspace: ${{ github.workspace}}"
        echo "matrix.repo_id: ${{ matrix.repo_id }}"                    
        echo "env.TARGET_REPO_NAME_EXT: ${{env.TARGET_REPO_NAME_EXT}}"             
        echo "env.TARGET_REPO_OWNER: ${{env.TARGET_REPO_OWNER}}"         
