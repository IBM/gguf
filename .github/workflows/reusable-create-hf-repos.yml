name: create-hf-repos-reusable

on:
  workflow_call:
    secrets:
      hf_token:
        required: true
      api_token:
        required: false
    inputs:
      enable_language_jobs:
        type: boolean
        required: false
        default: false
      enable_guardian_jobs:
        type: boolean
        required: false
        default: false
      enable_embedding_jobs:
        type: boolean
        required: false
        default: false
      enable_vision_jobs:
        type: boolean
        required: false
        default: false
      granite_family:
        type: string
        required: true
      hf_collection_config:
        type: string
        required: true
      target_repos:
        type: string
        required: true
      target_repo_owner:
        type: string
        required: true
      target_repo_name_ext:
        type: string
        required: true
      debug:
        type: boolean
        required: true
        default: false
      target_repo_private:
        type: boolean
        required: false
        default: true

jobs:
  reusable_create_hf_repos:
    runs-on: macos-latest
    if: |
      (${{ inputs.enable_language_jobs == true || inputs.enable_vision_jobs == true || inputs.enable_guardian_jobs == true || inputs.enable_embedding_jobs == true }}) &&
      (${{ ! contains(inputs.target_repos, 'None') }})
    steps:

    - run: |
        echo "[INFO] github.env:"
        echo "[INFO] >> run_id: '${{ github.run_id }}'"
        echo "[INFO] >> ref: '${{ github.ref }}', ref_name: '${{ github.ref_name }}', ref_type: '${{ github.ref_type }}'"
        echo "[INFO] >> workflow_ref: '${{ github.workflow_ref }}'"
        echo "[INFO] >> event_type: '${{ github.event_type }}'"
        echo "[INFO] >> event.: action: '${{ github.event.action }}'"
        echo "[INFO] >> event.: base_ref: '${{ github.event.base_ref }}'"
        echo "[INFO] >> event.: workflow_run.conclusion: '${{ github.event.workflow_run.conclusion }}'"
        echo "[INFO] >> event.release.: name: '${{ github.event.release.name }}', tag_name: '${{ github.event.release.tag_name }}'"

    - name: Dump GitHub inputs
      env:
        GITHUB_INPUTS: ${{ toJson(inputs) }}
      run: echo "$GITHUB_INPUTS"

    - name: set-local-env-vars
      run: |
        echo "target_repos=${{ inputs.target_repos }}" >> "$GITHUB_ENV"

    - name: List all environment variables
      run: env | sort

    - name: Verify repo. ID exists
      run: |
        if [[ "$target_repos" =~ "None" ]]; then
          echo "None detected."
          exit 0
        else
          echo "None NOT detected."
        fi

    - uses: actions/checkout@v4
      with:
        sparse-checkout: |
          ./requirements.txt
          scripts/
          resources/

    # Note: at the current time, we cannot use Python versions > 3.11 due to HF and langchain deps.
    # Note: you can verify in a step using: run: python -c "import sys; print(sys.version)"
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    # primarily, huggingface_hub and its deps. are installed
    - name: install-dependencies
      run: |
        python -m pip install -r ./requirements.txt
        pip list

    - name: create-hf-repos
      run: |
        echo "target_repos='$target_repos'"
        echo "inputs.target_repos: '${{ inputs.target_repos }}'"
        echo "inputs.target_repo_private: '${{ inputs.target_repo_private }}'"
        echo "inputs.target_repo_name_ext: '${{ inputs.target_repo_name_ext }}'"
        python ./scripts/hf_repos_create.py ${{ inputs.target_repo_owner }} ${{ inputs.hf_collection_config }} "$target_repos" ${{ inputs.granite_family }} ${{ inputs.target_repo_private }} ${{ secrets.hf_token }} --ext="${{ inputs.target_repo_name_ext}}" --debug
