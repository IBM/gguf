name: hf-create-collections-for-gguf

on:
  release:
    types: [created]
  # Assure model quantizations have been built & uploaded before creating collections (by ref. workflow)
  workflow_run:
    workflows: ["hf-build-release-gguf"]
    branches: [main]
    types: 
      - completed      
  workflow_dispatch:
 
permissions:
 contents: write
 packages: write

env:
  COLLECTION_HF_OWNER: mrutkows  
  COLLECTION_CONFIG: "resources/json/hf_collection_mapping.json"

jobs:
  build:
    runs-on: macos-latest
    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v4

    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"

    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"           

    - name: confirm-environment
      run: |
        uname -a
        echo "runner.os: ${{ runner.os }}"
        echo "runner.arch: ${{ runner.arch }}"
        echo "github.workspace: ${{ github.workspace}}"        
        echo "env.COLLECTION_HF_OWNER: ${{env.COLLECTION_HF_OWNER}}"        
        echo "env.COLLECTION_CONFIG: ${{env.COLLECTION_CONFIG}}"         

    # Note: at the current time, we cannot use Python versions > 3.11 due to HF and langchain deps.
    # Note: you can verify in a step using: run: python -c "import sys; print(sys.version)"
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    # Use this step to set values to the github context (shared across jobs/steps)
    # Note: using $GITHUB_OUTPUT sets values under the current step's namespace
    # whereas using $GITHUB_ENV sets values in the job's underlying environment.
    # Note: for each 'repo_id' we parse out e.g., REPO_ORG=ibm-granite REPO_NAME=granite-3.0-2b-instruct
    - name: set-github-env
      id: github_env
      run: |
        echo "working_dir=$(pwd)" >> $GITHUB_OUTPUT        
        echo "working_dir=$(pwd)" >> $GITHUB_ENV        

    - name: verify-github-env
      run: |   
        echo "steps.github_env.outputs.working_dir=${{ steps.github_env.outputs.working_dir }}"     
        echo "working_dir=$working_dir"
 
    # primarily huggingface_hub
    - name: install-dependencies
      run: |
        python -m pip install -r ./requirements.txt
        pip list      

    - name: debug-dynamic-environment
      run: |
        echo "outputs.working_dir=${{ steps.github_env.outputs.working_dir }}"             
        echo "COLLECTION_HF_OWNER (env)=$COLLECTION_HF_OWNER (${{ env.COLLECTION_HF_OWNER }})"
        echo "COLLECTION_CONFIG (env)=$COLLECTION_CONFIG (${{ env.COLLECTION_CONFIG }})"    

    # Usage: python {script_name} <repo_name:str> <title:str> <description:str> <private:bool> <hf_token:str>")
    - name: create-hf-collections
      run: |
        python ./scripts/hf_collections_create.py ${{env.COLLECTION_HF_OWNER}} ${{env.COLLECTION_CONFIG}} True ${{secrets.HF_TOKEN}}
